#print 'anatomist-ggp.bcg'
#print currentComponentFile

anatomistgpl_modules = [ 'pyanatomist', ]
anatomistgpl_weakdeps = []
anatomistgpl_subprojects = anatomistgpl_modules + anatomistgpl_weakdeps

class AnatomistGplComponent( GenericMakerModuleComponent ):
  _name = 'anatomist-gpl'

  def dependencies( self ):
    global anatomistgpl_modules
    return [ 'anatomist-free' ] + anatomistgpl_modules

  def weakDependencies( self ):
    global anatomistgpl_weakdeps
    deps = []
    for component in anatomistgpl_weakdeps:
      if weakDependency( component ):
        deps.append( component )
    return deps

  def libraries( self ):
    return []

currentComponentDirectory = os.path.dirname( currentComponentFile )
opts = options.setdefault( 'anatomist-gpl' )
for component in anatomistgpl_modules:
  oldop = options.setdefault( component, {} )
  options[ component ] = copy.copy( opts )
  options[ component ].update( oldop )
  c = options.setdefault( component, {} )
  c[ 'source' ] = os.path.join( currentComponentDirectory, component )
  c[ 'version' ] = '4.0'
